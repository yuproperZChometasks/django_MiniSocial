MiniSocial — Простая социальная сеть на Django
О заказчике
Компания: SimpleTechLab — стартап из сферы образовательных платформ и цифровых решений, 
ориентированных на обучение программированию. Команда ищет решение, которое можно использовать 
в качестве учебной платформы и демо-сервиса, где пользователи тренируются в работе с социальным 
функционалом: постами, комментариями, подписками и т.д.
Цель заказчика:
Создать базовую, но функциональную социальную сеть, которую можно развивать как отдельный проект или 
использовать в образовательных целях для демонстрации возможностей Django и веб-технологий.
Цель проекта
Создать простое веб-приложение на Django, которое позволит пользователям регистрироваться, публиковать 
текстовые посты, взаимодействовать с контентом других пользователей (лайки, комментарии, подписки), а также 
использовать административную панель для управления данными.
________________________________________
Целевая аудитория
Пользователи, желающие публиковать короткие текстовые сообщения, подписываться на других пользователей и общаться через лайки и комментарии.
________________________________________
Функциональные требования
Пользовательский функционал
1.	Регистрация и аутентификация
○	Регистрация с email и/или username и паролем.
○	Авторизация через форму входа.
○	Выход из системы.
○	Сброс пароля через email (опционально, если будет время).
2.	Публикация постов
○	Возможность создавать посты (текст до 1000 символов).
○	Возможность прикрепить изображение к посту (опционально).
○	Редактирование и удаление только своих постов.
○	Отображение даты и времени создания поста.
3.	Лента новостей
○	Главная страница отображает посты всех пользователей или только тех, на кого подписан текущий пользователь.
○	Возможность сортировки постов по дате (новые сверху).
○	Пагинация постов (по желанию).
4.	Подписки
○	Возможность подписаться/отписаться от других пользователей.
○	Просмотр списка подписок и подписчиков.
○	Персонализированная лента постов от подписок.
5.	Лайки
○	Возможность поставить лайк на пост.
○	Отображение количества лайков.
○	Возможность снять лайк.
6.	Комментарии
○	Возможность оставлять комментарии к постам.
○	Отображение комментариев под постом с указанием автора и даты.
________________________________________
Администрирование
●	Использование стандартной админ-панели Django.
●	Управление пользователями, постами, комментариями, лайками и подписками.
●	Возможность добавления, редактирования и удаления записей через админку.
________________________________________
Дополнительные возможности (опционально)
1.	Пагинация
○	Реализация постраничного вывода постов в ленте для ускорения загрузки.
2.	Улучшение дизайна
○	Применение Bootstrap или другого CSS-фреймворка для современного интерфейса.
3.	Поиск
○	Функционал поиска по постам и пользователям.
4.	AJAX
○	Частичное обновление элементов (лайки, комментарии) без перезагрузки страницы.
5.	Личные сообщения
○	Возможность отправки сообщений между пользователями.
○	Страница диалогов и история переписки.
6.	Уведомления
○	Уведомления о новых лайках, комментариях, подписках, сообщениях.
○	Визуальные уведомления в профиле пользователя или во всплывающих окнах.
________________________________________
Технологии
●	Язык: Python 3.10+
●	Фреймворк: Django 4.x
●	Шаблоны: Django Templates + Bootstrap
●	База данных: SQLite
●	Аутентификация: Django auth
●	Загрузка файлов: ImageField + настройка MEDIA
●	UI: Bootstrap
________________________________________
Критерии успешного выполнения
●	Возможность зарегистрироваться, войти и использовать систему.
●	Реализация публикации постов с отображением в ленте.
●	Возможность ставить лайки, оставлять комментарии и подписываться.
●	Работающий механизм ролей и разграничение доступа.
●	Админ-панель для управления всеми объектами.
●	Структурированный, читаемый код и документация по запуску проекта.
План реализации по этапам
Этап 1: Подготовка и базовая структура
●	Настройка Django-проекта и приложения social
●	Настройка модели пользователя (если кастомная)
●	Подключение Bootstrap, конфигурация базы
Этап 2: Регистрация, логин, лента
●	Регистрация/вход/выход
●	Главная страница с лентой постов
●	Создание модели постов, вывод в шаблон
Этап 3: Посты, лайки, комментарии
●	CRUD для постов
●	Система лайков (OneToMany с User)
●	Модель и вывод комментариев
Этап 4: Подписки и профиль
●	Механизм подписки
●	Отображение постов только от подписок
●	Страница профиля пользователя
Этап 5: Администрирование и доработка
●	Настройка Django admin
●	Добавление фильтров, улучшений в интерфейсе
●	Базовая документация по проекту
Этап 6: Дополнительные разработки
●	AJAX, поиск, сообщения, уведомления
●	Мобильная адаптация и улучшения дизайна
